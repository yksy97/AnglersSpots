<div class="container mt-5">
  <div class="row">
    <!-- 会員情報セクション -->
    <div class="col-md-4">
      <%= render 'public/customers/customer_section' %>
    </div>
    
    <div class="col-md-8">
      <div class="card">
        <div class="card-header" style="background-color: #AFDFE4;">
          <h2 class="mb-0 text-center">
           新規投稿
          </h2>
        </div>
        <div class="card-body">

        <%= form_with model: @post, url: posts_path, local: true, html: { id: "uniqueNewPostForm", novalidate: '' } do |f| %>
          <div class="form-group">
            <label class="d-block mb-2">魚</label>
            <div class="btn-group" role="group" aria-label="Genre Buttons">
              <button type="button" id="uniqueNewGenreBtn" class="btn btn-primary rounded mr-2">新規</button>
              <button type="button" id="uniqueExistingGenreBtn" class="btn btn-success rounded">既存</button>
            </div>
            <small class="form-text text-muted">過去に投稿した魚は既存から選択できます</small>
          </div>
        
          <div id="uniqueNewGenreInput" class="mb-3" style="display: none;">
            <%= f.label :new_genre_name, "新規の魚" %>
            <%= f.text_field :new_genre_name, class: "form-control" %>
          </div>
        
          <div id="uniqueExistingGenreSelect" class="mb-3" style="display: none;">
            <%= f.label :genre_id, "魚を選択" %>
            <%= f.collection_select :genre_id, Genre.order(:name), :id, :name, {include_blank: true}, class: "custom-select" %>
          </div>
        
          <!-- 釣り方フォーム -->
          <div class="form-group">
            <%= f.label :rig_list, "釣り方" %>
            <%= f.text_field :rig_list, class: "form-control", required: true %>
            <div class="invalid-feedback">入力してください</div>
            <small class="form-text text-muted">スペースを開けると複数の単語を投稿できます。例：ジギング　夕まずめ</small>
          </div>
        
          <!-- 釣り場フォーム -->
          <div class="form-group">
            <%= f.label :location, "釣り場" %>
            <%= f.text_field :location, class: "form-control", required: true %>
            <div class="invalid-feedback">入力してください</div>
            <small class="form-text text-muted">例：東京湾、相模湾、瀬戸内海、男女群島</small>
          </div>
        
        <!-- 画像フォーム -->
        <div class="form-group">
          <%= f.label :image, "画像" %>
          <div class="input-group drop-area">
            <div class="custom-file">
              <%= f.file_field :image, class: "custom-file-input", id: "uniqueInputFile" %>
              <label class="custom-file-label" for="uniqueInputFile" data-browse="参照">ここに画像をドラッグ&ドロップまたは選択してください</label>
            </div>
          </div>
          <small class="form-text text-muted">対応ファイル形式: jpg, jpeg, png</small>
        </div>
        
          <!-- タックルプリセット -->
          <div class="form-group">
            <%= f.label :tackle_id, "タックルプリセット" %>
            <%= f.collection_select :tackle_id, Tackle.all, :id, :name, {include_blank: "プリセットなし"}, class: "custom-select" %>
          </div>
        
          <!-- 感想フォーム -->
          <div class="form-group">
            <%= f.label :body, "感想" %>
            <%= f.text_area :body, class: "form-control", rows: 5, required: true %>
            <div class="invalid-feedback">入力してください</div>
          </div>
        
          <div class="actions">
            <%= f.submit "投稿", class: "btn btn-primary", id: "uniqueSubmitBtn" %>
          </div>
        <% end %>
         </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const newGenreBtn = document.getElementById('uniqueNewGenreBtn');
    const existingGenreBtn = document.getElementById('uniqueExistingGenreBtn');
    const newGenreInput = document.getElementById('uniqueNewGenreInput');
    const existingGenreSelect = document.getElementById('uniqueExistingGenreSelect');
    const form = document.getElementById('uniqueNewPostForm');
    const submitBtn = document.getElementById('uniqueSubmitBtn');

  // 新規と既存ボタンのイベントリスナー
  newGenreBtn.addEventListener('click', function() {
    newGenreInput.style.display = 'block';
    existingGenreSelect.style.display = 'none';
    submitBtn.disabled = true; // 新規選択時は送信ボタンを無効化
  });

  existingGenreBtn.addEventListener('click', function() {
    newGenreInput.style.display = 'none';
    existingGenreSelect.style.display = 'block';
    submitBtn.disabled = !existingGenreSelect.querySelector('select').value; // 既存選択時は選択状態に応じてボタンの有効化を切り替え
  });

  // フォーム内の全入力フィールドにinputイベントリスナーを追加
  const inputs = form.querySelectorAll('input, select, textarea');
  inputs.forEach(input => {
    input.addEventListener('input', function() {
      // 新規名入力または既存選択のいずれかが有効な場合にのみ送信ボタンを有効化
      const isGenreValid = newGenreInput.querySelector('input').value.trim() || existingGenreSelect.querySelector('select').value;
      submitBtn.disabled = !(form.checkValidity() && isGenreValid);
    });
  });

  // フォーム送信時の処理
  form.addEventListener('submit', function(event) {
    const newGenreValue = newGenreInput.querySelector('input').value.trim();
    const existingGenreValue = existingGenreSelect.querySelector('select').value;

    if ((!newGenreValue && !existingGenreValue) || !form.checkValidity()) {
      event.preventDefault(); // フォームの送信を阻止
      alert('既存の魚を選択するか、新規の魚を入力してください');
    }
  });
});
  
  // 画像のドラッグ&ドロップ
  document.addEventListener('DOMContentLoaded', function() {
  var dropArea = document.querySelector('.drop-area');
  var inputFile = document.getElementById('uniqueInputFile');

  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, preventDefaults, false);
  });

  function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
  }

  // ドロップ時の処理
  dropArea.addEventListener('drop', handleDrop, false);

  function handleDrop(e) {
    var dt = e.dataTransfer;
    var files = dt.files;

    inputFile.files = files;

    // ファイル名を表示
    var fileName = files[0].name;
    dropArea.querySelector('.custom-file-label').innerText = fileName;
  }

  // ファイル選択時の処理
  inputFile.addEventListener('change', function(e) {
    var files = inputFile.files;
    var fileName = files[0].name;
    dropArea.querySelector('.custom-file-label').innerText = fileName;
  });
});
</script>


